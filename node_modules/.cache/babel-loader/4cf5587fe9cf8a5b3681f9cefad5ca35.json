{"ast":null,"code":"var _jsxFileName = \"/Users/gebruiker/Desktop/goit-react-hw-01-components/src/components/FriendsList/FriendList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './friendList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.friendList,\n    children: friends.map(_ref2 => {\n      let {\n        id,\n        isOnline,\n        avatar,\n        name\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(FriendListItem, {\n        id: id,\n        isOnline: isOnline,\n        avatar: avatar,\n        name: name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/gebruiker/Desktop/goit-react-hw-01-components/src/components/FriendsList/FriendList.jsx"],"names":["React","PropTypes","FriendListItem","styles","FriendList","friends","friendList","map","id","isOnline","avatar","name","propTypes","arrayOf","shape","number","isRequired","bool","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;;AAEA,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAClC,sBACE;AAAI,IAAA,SAAS,EAAEF,MAAM,CAACG,UAAtB;AAAA,cACGD,OAAO,CAACE,GAAR,CAAY;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,QAAN;AAAgBC,QAAAA,MAAhB;AAAwBC,QAAAA;AAAxB,OAAD;AAAA,0BACX,QAAC,cAAD;AAEE,QAAA,EAAE,EAAEH,EAFN;AAGE,QAAA,QAAQ,EAAEC,QAHZ;AAIE,QAAA,MAAM,EAAEC,MAJV;AAKE,QAAA,IAAI,EAAEC;AALR,SACOH,EADP;AAAA;AAAA;AAAA;AAAA,cADW;AAAA,KAAZ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;KAAMJ,U;AAgBNA,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,OAAV,CACPZ,SAAS,CAACa,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEP,SAAS,CAACc,MAAV,CAAiBC,UADP;AAEdP,IAAAA,QAAQ,EAAER,SAAS,CAACgB,IAAV,CAAeD,UAFX;AAGdN,IAAAA,MAAM,EAAET,SAAS,CAACiB,MAAV,CAAiBF,UAHX;AAIdL,IAAAA,IAAI,EAAEV,SAAS,CAACiB,MAAV,CAAiBF;AAJT,GAAhB,CADO,EAOPA;AARmB,CAAvB;AAWA,eAAeZ,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './friendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(({ id, isOnline, avatar, name }) => (\n        <FriendListItem\n          key={id}\n          id={id}\n          isOnline={isOnline}\n          avatar={avatar}\n          name={name}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default FriendList;\n"]},"metadata":{},"sourceType":"module"}